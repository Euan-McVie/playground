version: '3'
services:
  consul:
    image: consul
    ports:
      - "8500:8500" #HTTP access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://consul:8500"]
      interval: 30s
      timeout: 30s
      retries: 15
    restart: on-failure
    networks:
      - infrastructure
      - services
    volumes:
      - consul-data:/consul/data

  kong-database:
    image: postgres:9.6
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong 
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    networks:
      - kong
    volumes:
      - kong-data:/var/lib/postgresql/data
      
  kong-migration:
    image: kong
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
    restart: on-failure
    networks:
      - kong
  
  kong:
    image: kong
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    depends_on:
      - kong-database
      - kong-migration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 30s
      timeout: 30s
      retries: 15
    restart: on-failure
    networks:
      - kong

  konga-migration:
    image: pantsel/konga
    command: "-c prepare -a postgres -u postgresql://kong@kong-database:5432/konga_db"
    depends_on:
      - kong-database
    restart: on-failure
    networks:
      - kong
    volumes:
      - konga-data:/app/kongadata

  konga:
    image: pantsel/konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
      - konga-migration
      - kong
    ports:
      - "9500:1337" #HTTP access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://konga:1337"]
      interval: 30s
      timeout: 30s
      retries: 15
    restart: on-failure
    networks:
      - kong
    volumes:
      - konga-data:/app/kongadata
      
  keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Brady123!
      DB_VENDOR: h2
    ports:
      - "8080:8080" #HTTP access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://keycloak:8080"]
      interval: 30s
      timeout: 30s
      retries: 15
    restart: on-failure
    networks:
      - infrastructure

volumes:
  consul-data:
  kong-data:
  konga-data:

networks:
  services:
  infrastructure:
  kong: