<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Playground.Infrastructure.Extensions.ServiceDiscovery</name>
    </assembly>
    <members>
        <member name="T:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableGrpcServiceAttribute">
            <summary>
            This attribute is used to register the decorated gRPC service with the remote service discovery mechanism.
            </summary>
        </member>
        <member name="M:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableGrpcServiceAttribute.#ctor(System.String,System.String[])">
            <summary>
            Contructor to set the required properties of a discoverable gRPC service.
            </summary>
            <param name="serviceName">The name of the service to register with service discovery.</param>
            <param name="tags">Additional tags used to group the service.</param>
        </member>
        <member name="T:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableServiceAttribute">
            <summary>
            The <see langword="abstract"/> <see cref="T:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableServiceAttribute"/> is used as a base for more specific Discoverable Service attributes.
            This attribute is used to register the decorated service with the remote service discovery mechanism.
            </summary>
        </member>
        <member name="P:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableServiceAttribute.ServiceName">
            <summary>
            The name of the service to register with service discovery.
            </summary>
        </member>
        <member name="P:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableServiceAttribute.ServiceType">
            <summary>
            The type of the service to register with service discovery.
            </summary>
        </member>
        <member name="P:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableServiceAttribute.Tags">
            <summary>
            Additional tags used to group the service.
            </summary>
        </member>
        <member name="M:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableServiceAttribute.#ctor(System.String,System.String,System.String[])">
            <summary>
            Contructor to set the required properties of a discoverable service.
            </summary>
            <param name="serviceName">The name of the service to register with service discovery.</param>
            <param name="serviceType">The type of the service to register with service discovery.</param>
            <param name="tags">Additional tags used to group the service.</param>
        </member>
        <member name="T:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableWebAPIServiceAttribute">
            <summary>
            This attribute is used to register the decorated Web API service with the remote service discovery mechanism.
            </summary>
        </member>
        <member name="M:Playground.Infrastructure.Extensions.ServiceDiscovery.Attributes.DiscoverableWebAPIServiceAttribute.#ctor(System.String,System.String[])">
            <summary>
            Contructor to set the required properties of a discoverable Web API service.
            </summary>
            <param name="serviceName">The name of the service to register with service discovery.</param>
            <param name="tags">Additional tags used to group the service.</param>
        </member>
        <member name="T:Playground.Infrastructure.Extensions.ServiceDiscovery.Interfaces.IServiceLookup">
            <summary>
            Contract for looking up a service location from a discovery service.
            </summary>
        </member>
        <member name="M:Playground.Infrastructure.Extensions.ServiceDiscovery.Interfaces.IServiceLookup.TryGetServiceLocationAsync(System.String,System.String)">
            <summary>
            Try to find the location for the provided <paramref name="serviceName"/>.
            </summary>
            <param name="serviceName">The name of the service to find.</param>
            <param name="serviceType">The type of the service to find.</param>
            <returns>A <see cref="T:System.ValueTuple"/> containing an <c>IsFound</c> flag and the <c>Location</c> <see cref="T:System.Uri"/> if it is.</returns>
        </member>
    </members>
</doc>
